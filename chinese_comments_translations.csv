Filename,Line Number,Chinese Comment,English Translation"src/index.ts",15,"// 导入所有工具函数和 schema","// Import all tool functions and schemas"
"src/index.ts",58,"// 创建MCP服务器","// Create MCP server"
"src/index.ts",73,"// 设置全局 server 实例","// Set global server instance"
"src/index.ts",77,"// 监听 initialized 通知来启动 web 服务器","// Listen for initialized notification to start web server"
"src/index.ts",370,"// 创建连接","// Establish connection"
"src/models/taskModel.ts",18,"// 确保获取项目文件夹路径","// Ensure getting project data folder path"
"src/models/taskModel.ts",24,"// 数据文档路径（改为异步获取）","// Data file paths (changed to asynchronous acquisition)"
"src/models/taskModel.ts",29,"// 将exec转换为Promise形式","// Convert exec to Promise form"
"src/models/taskModel.ts",33,"// 确保数据目录存在","// Ensure data directory exists"
"src/models/taskModel.ts",52,"// 读取所有任务","// Read all tasks"
"src/models/taskModel.ts",60,"// 将日期字符串转换回 Date 对象","// Convert date strings back to Date objects"
"src/models/taskModel.ts",70,"// 写入所有任务","// Write all tasks"
"src/models/taskModel.ts",78,"// 获取所有任务","// Get all tasks"
"src/models/taskModel.ts",84,"// 根据ID获取任务","// Get task by ID"
"src/models/taskModel.ts",91,"// 创建新任务","// Create new task"
"src/models/taskModel.ts",124,"// 更新任务","// Update task"
"src/models/taskModel.ts",138,"// Check if task is completed，已完成的任务不允许更新（除非是明确允许的字段）","// Check if task is completed, completed tasks cannot be updated (unless explicitly allowed fields)"
"src/models/taskModel.ts",141,"// 仅允许更新 summary 字段（任务摘要）和 relatedFiles 字段","// Only allow updating summary field (task summary) and relatedFiles field"
"src/models/taskModel.ts",204,"// 获取任务并检查是否存在","// Get task and check if it exists"
"src/models/taskModel.ts",212,"// 检查任务是否已完成","// Check if task is completed"
"src/models/taskModel.ts",218,"// 构建更新对象，只包含实际需要更新的字段","// Build update object, only including fields that actually need updating"
"src/models/taskModel.ts",252,"// 如果没有要更新的内容，提前返回","// If there is no content to update, return early"
"src/models/taskModel.ts",258,"// 运行更新","// Execute update"
"src/models/taskModel.ts",279,"// 获取任务并检查是否存在","// Get task and check if it exists"
"src/models/taskModel.ts",287,"// 检查任务是否已完成","// Check if task is completed"
"src/models/taskModel.ts",293,"// 运行更新","// Execute update"
"src/models/taskModel.ts",368,"// 创建新任务的列表","// Create list of new tasks"
"src/models/taskModel.ts",373,"// 检查是否为选择性更新模式且该任务名称已存在","// Check if it is selective update mode and the task name already exists"
"src/models/taskModel.ts",376,"// 获取现有任务的ID","// Get the ID of the existing task"
"src/models/taskModel.ts",380,"// 查找现有任务","// Find existing task"
"src/models/taskModel.ts",386,"// 如果找到现有任务并且该任务未完成，则更新它","// If existing task is found and not completed, update it"
"src/models/taskModel.ts",395,"// 更新任务的基本信息，但保留原始ID、创建时间等","// Update basic task information, but preserve original ID, creation time, etc."
"src/models/taskModel.ts",402,"// 后面会处理 dependencies","// Dependencies will be processed later"
"src/models/taskModel.ts",405,"// 添加：保存实现指南（如果有）","// New: Save implementation guide (if any)"
"src/models/taskModel.ts",408,"// 添加：保存验证标准（如果有）","// New: Save verification criteria (if any)"
"src/models/taskModel.ts",411,"// 添加：保存全局分析结果（如果有）","// New: Save global analysis result (if any)"
"src/models/taskModel.ts",416,"// 处理相关文档（如果有）","// Process related files (if any)"
"src/models/taskModel.ts",422,"// 将更新后的任务添加到新任务列表","// Add updated task to new task list"
"src/models/taskModel.ts",426,"// 从tasksToKeep中移除此任务，因为它已经被更新并添加到newTasks中了","// Remove this task from tasksToKeep because it has been updated and added to newTasks"
"src/models/taskModel.ts",431,"// 创建新任务","// Create new task"
"src/models/taskModel.ts",436,"// 将新任务的名称和ID添加到映射中","// Add new task name and ID to mapping"
"src/models/taskModel.ts",462,"// 处理任务之间的依赖关系","// Handle dependencies between tasks"
"src/models/taskModel.ts",468,"// 如果存在依赖关系，处理它们","// If dependencies exist, process them"
"src/models/taskModel.ts",474,"// 首先尝试将依赖项解释为任务ID","// First try to interpret dependency as task ID"
"src/models/taskModel.ts",478,"// 如果依赖项看起来不像UUID，则尝试将其解释为任务名称","// If dependency does not look like UUID, try to interpret it as task name"
"src/models/taskModel.ts",485,"// 如果映射中存在此名称，则使用对应的ID","// If this name exists in mapping, use corresponding ID"
"src/models/taskModel.ts",490,"continue; // 跳过此依赖","continue; // Skip this dependency"
"src/models/taskModel.ts",494,"// 是UUID格式，但需要确认此ID是否对应实际存在的任务","// Is UUID format, but need to confirm if this ID corresponds to an actually existing task"
"src/models/taskModel.ts",500,"continue; // 跳过此依赖","continue; // Skip this dependency"
"src/models/taskModel.ts",512,"// 合并保留的任务和新任务","// Merge kept tasks and new tasks"
"src/models/taskModel.ts",516,"// 写入更新后的任务列表","// Write updated task list"
"src/models/taskModel.ts",523,"// 检查任务是否可以运行（所有依赖都已完成）","// Check if task can be executed (all dependencies completed)"
"src/models/taskModel.ts",535,"return { canExecute: false }; // 已完成的任务不需要再运行","return { canExecute: false }; // Completed tasks do not need to be executed again"
"src/models/taskModel.ts",540,"return { canExecute: true }; // 没有依赖的任务可以直接运行","return { canExecute: true }; // Tasks without dependencies can be executed directly"
"src/models/taskModel.ts",561,"// 删除任务","// Delete task"
"src/models/taskModel.ts",573,"// 检查任务状态，已完成的任务不允许删除","// Check task status, completed tasks cannot be deleted"
"src/models/taskModel.ts",579,"// 检查是否有其他任务依赖此任务","// Check if other tasks depend on this task"
"src/models/taskModel.ts",596,"// 运行删除操作","// Execute delete operation"
"src/models/taskModel.ts",604,"// 评估任务复杂度","// Assess task complexity"
"src/models/taskModel.ts",615,"// 评估各项指针","// Assess various indicators"
"src/models/taskModel.ts",622,"// 基于各项指针评估复杂度级别","// Assess complexity level based on various indicators"
"src/models/taskModel.ts",626,"// 描述长度评估","// Description length assessment"
"src/models/taskModel.ts",642,"// 依赖数量评估（取最高级别）","// Dependencies count assessment (take highest level)"
"src/models/taskModel.ts",661,"// 注记长度评估（取最高级别）","// Notes length assessment (take highest level)"
"src/models/taskModel.ts",678,"// 根据复杂度级别生成处理建议","// Generate processing suggestions based on complexity level"
"src/models/taskModel.ts",682,"// 低复杂度任务建议","// Low complexity task suggestions"
"src/models/taskModel.ts",688,"// 中等复杂度任务建议","// Medium complexity task suggestions"
"src/models/taskModel.ts",697,"// 高复杂度任务建议","// High complexity task suggestions"
"src/models/taskModel.ts",711,"// 极高复杂度任务建议","// Very high complexity task suggestions"
"src/models/taskModel.ts",748,"// 清除所有任务","// Clear all tasks"
"src/models/taskModel.ts",756,"// 确保数据目录存在","// Ensure data directory exists"
"src/models/taskModel.ts",760,"// 读取现有任务","// Read existing tasks"
"src/models/taskModel.ts",764,"// 如果没有任务，直接返回","// If no tasks, return directly"
"src/models/taskModel.ts",770,"// 筛选出已完成的任务","// Filter out completed tasks"
"src/models/taskModel.ts",776,"// 创建备份文档名","// Create backup file name"
"src/models/taskModel.ts",784,"// 确保 memory 目录存在","// Ensure memory directory exists"
"src/models/taskModel.ts",793,"// 创建 memory 目录下的备份路径","// Create backup path under memory directory"
"src/models/taskModel.ts",797,"// 同时写入到 memory 目录 (只包含已完成的任务)","// Also write to memory directory (only containing completed tasks)"
"src/models/taskModel.ts",804,"// 清空任务文档","// Clear task file"
"src/models/taskModel.ts",823,"// 使用系统指令搜索任务记忆","// Use system command to search task memory"
"src/models/taskModel.ts",839,"// 读取当前任务文件中的任务","// Read tasks from current task file"
"src/models/taskModel.ts",844,"// 搜索记忆文件夹中的任务","// Search tasks in memory folder"
"src/models/taskModel.ts",849,"// 确保记忆文件夹存在","// Ensure memory folder exists"
"src/models/taskModel.ts",853,"// 生成搜索命令","// Generate search command"
"src/models/taskModel.ts",857,"// 如果有搜索命令，运行它","// If there is a search command, execute it"
"src/models/taskModel.ts",866,"// 解析搜索结果，提取符合的文件路径","// Parse search results, extract matching file paths"
"src/models/taskModel.ts",872,"// 格式通常是: 文档路径:匹配内容","// Format is usually: file path:matching content"
"src/models/taskModel.ts",881,"// 限制读取文件数量","// Limit number of files to read"
"src/models/taskModel.ts",889,"// 只处理符合条件的文件","// Only process files that meet criteria"
"src/models/taskModel.ts",896,"// 格式化日期字段","// Format date fields"
"src/models/taskModel.ts",911,"// 进一步过滤任务确保符合条件","// Further filter tasks to ensure criteria are met"
"src/models/taskModel.ts",946,"// 从当前任务中过滤符合条件的任务","// Filter qualifying tasks from current tasks"
"src/models/taskModel.ts",950,"// 合并结果并去重","// Merge results and deduplicate"
"src/models/taskModel.ts",954,"// 当前任务优先","// Current tasks have priority"
"src/models/taskModel.ts",960,"// 加入记忆任务，避免重复","// Add memory tasks, avoiding duplicates"
"src/models/taskModel.ts",968,"// 合并后的结果","// Merged results"
"src/models/taskModel.ts",972,"// 排序 - 按照更新或完成时间降序排列","// Sort - by update or completion time in descending order"
"src/models/taskModel.ts",975,"// 优先按完成时间排序","// Sort by completion time first"
"src/models/taskModel.ts",980,"return -1; // a完成了但b未完成，a排前面","return -1; // a is completed but b is not, a comes first"
"src/models/taskModel.ts",983,"return 1; // b完成了但a未完成，b排前面","return 1; // b is completed but a is not, b comes first"
"src/models/taskModel.ts",987,"// 否则按更新时间排序","// Otherwise sort by update time"
"src/models/taskModel.ts",992,"// 分页处理","// Pagination processing"
"src/models/taskModel.ts",996,"const safePage = Math.max(1, Math.min(page, totalPages || 1)); // 确保页码有效","const safePage = Math.max(1, Math.min(page, totalPages || 1)); // Ensure page number is valid"
"src/models/taskModel.ts",1013,"// 根据平台生成适当的搜索命令","// Generate appropriate search command based on platform"
"src/models/taskModel.ts",1020,"// 安全地转义用户输入","// Safely escape user input"
"src/models/taskModel.ts",1025,"// 检测操作系统类型","// Detect operating system type"
"src/models/taskModel.ts",1030,"// Windows环境，使用findstr命令","// Windows environment, use findstr command"
"src/models/taskModel.ts",1033,"// ID搜索","// ID search"
"src/models/taskModel.ts",1037,"// 单一关键字","// Single keyword"
"src/models/taskModel.ts",1041,"// 多关键字搜索 - Windows中使用PowerShell","// Multi-keyword search - use PowerShell in Windows"
"src/models/taskModel.ts",1047,"// Unix/Linux/MacOS环境，使用grep命令","// Unix/Linux/MacOS environment, use grep command"
"src/models/taskModel.ts",1054,"// 多关键字用管道连接多个grep命令","// Multi-keyword using pipe to connect multiple grep commands"
"src/models/taskModel.ts",1077,"// 移除所有控制字符和特殊字符","// Remove all control characters and special characters"
"src/models/taskModel.ts",1081,".replace(/[&;`$""'<>|]/g, """"); // Shell 特殊字符",".replace(/[&;`$""'<>|]/g, """"); // Shell special characters"
"src/models/taskModel.ts",1085,"// 过滤当前任务列表","// Filter current task list"
"src/prompts/generators/analyzeTask.ts",60,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/clearAllTasks.ts",45,"// 处理未确认的情况","// Handle unconfirmed situations"
"src/prompts/generators/clearAllTasks.ts",54,"// 处理无任务需要清除的情况","// Handle situations where no tasks need to be cleared"
"src/prompts/generators/clearAllTasks.ts",63,"// 处理清除成功或失败的情况","// Handle success or failure situations for clearing"
"src/prompts/generators/clearAllTasks.ts",67,"// 使用模板生成 backupInfo","// Use template to generate backupInfo"
"src/prompts/generators/clearAllTasks.ts",85,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/completeTask.ts",39,"// 开始构建基本 prompt","// Start building the basic prompt"
"src/prompts/generators/completeTask.ts",47,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/deleteTask.ts",40,"// 处理任务不存在的情况","// Handle case when task does not exist"
"src/prompts/generators/deleteTask.ts",51,"// 处理任务已完成的情况","// Handle case when task is already completed"
"src/prompts/generators/deleteTask.ts",63,"// 处理删除成功或失败的情况","// Handle successful or failed deletion cases"
"src/prompts/generators/deleteTask.ts",72,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/executeTask.ts",185,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/getTaskDetail.ts",38,"// 如果有错误，显示错误消息","// If there is an error, display error message"
"src/prompts/generators/getTaskDetail.ts",49,"// 如果找不到任务，显示找不到任务的消息","// If task cannot be found, display task not found message"
"src/prompts/generators/getTaskDetail.ts",133,"// 开始构建基本 prompt","// Start building the basic prompt"
"src/prompts/generators/getTaskDetail.ts",150,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/initProjectRules.ts",14,"// 目前没有额外参数，未来可按需扩展","// Currently no additional parameters, can be expanded as needed in the future"
"src/prompts/generators/initProjectRules.ts",33,"// 加载可能的自定义 prompt (通过环境变量覆盖或追加)","// Load possible custom prompt (override or append via environment variables)"
"src/prompts/generators/listTasks.ts",38,"// 如果没有任务，显示通知","// If there are no tasks, show notification"
"src/prompts/generators/listTasks.ts",51,"// 获取所有状态的计数","// Get counts for all statuses"
"src/prompts/generators/listTasks.ts",78,"// 添加每个状态下的详细任务","// Add detailed tasks under each status"
"src/prompts/generators/listTasks.ts",115,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/planTask.ts",46,"// 如果存在任务，则添加相关信息","// If tasks exist, add related information"
"src/prompts/generators/planTask.ts",51,"// 处理已完成任务","// Process completed tasks"
"src/prompts/generators/planTask.ts",55,"// 最多显示10个已完成任务，避免提示词过长","// Show at most 10 completed tasks to avoid overly long prompts"
"src/prompts/generators/planTask.ts",63,"// 产生完成时间信息 (如果有)","// Generate completion time information (if available)"
"src/prompts/generators/planTask.ts",76,"// 如果不是最后一个任务，添加换行","// If not the last task, add line break"
"src/prompts/generators/planTask.ts",83,"// 如果有更多任务，显示提示","// If there are more tasks, show hint"
"src/prompts/generators/planTask.ts",92,"// 处理未完成任务","// Process unfinished tasks"
"src/prompts/generators/planTask.ts",113,"// 如果不是最后一个任务，添加换行","// If not the last task, add line break"
"src/prompts/generators/planTask.ts",145,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/queryTask.ts",78,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/reflectTask.ts",40,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/researchMode.ts",37,"// 处理之前的研究状态","// Process previous research state"
"src/prompts/generators/researchMode.ts",52,"// 加载主要模板","// Load main template"
"src/prompts/generators/researchMode.ts",64,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/splitTasks.ts",61,"// 查找依赖任务的名称，提供更友好的显示","// Find the name of the dependent task for more friendly display"
"src/prompts/generators/splitTasks.ts",90,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/updateTaskContent.ts",50,"// 处理任务不存在的情况","// Handle case when task doesn't exist"
"src/prompts/generators/updateTaskContent.ts",61,"// 处理验证错误的情况","// Handle validation error case"
"src/prompts/generators/updateTaskContent.ts",72,"// 处理空更新的情况","// Handle empty update case"
"src/prompts/generators/updateTaskContent.ts",81,"// 处理更新成功或失败的情况","// Handle successful or failed update case"
"src/prompts/generators/updateTaskContent.ts",86,"// 更新成功且有更新后的任务详情","// Successful update with updated task details"
"src/prompts/generators/updateTaskContent.ts",93,"// 编合相关文档信息","// Compile related file information"
"src/prompts/generators/updateTaskContent.ts",101,"// 按文档类型分组","// Group by file type"
"src/prompts/generators/updateTaskContent.ts",111,"// 为每种文档类型生成内容","// Generate content for each file type"
"src/prompts/generators/updateTaskContent.ts",123,"// 处理任务备注","// Process task notes"
"src/prompts/generators/updateTaskContent.ts",134,"// 生成成功更新的详细信息","// Generate detailed information for successful update"
"src/prompts/generators/updateTaskContent.ts",157,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/generators/verifyTask.ts",45,"// 简单的摘要提取：截取前 maxLength 个字符并添加省略号","// Simple summary extraction: truncate to first maxLength characters and add ellipsis"
"src/prompts/generators/verifyTask.ts",86,"// 加载可能的自定义 prompt","// Load possible custom prompt"
"src/prompts/index.ts",8,"// 导出内核工具","// Export core tools"
"src/prompts/index.ts",12,"// 当完成各个模块时，将在下方导出各个 prompt 生成器","// When each module is completed, the respective prompt generators will be exported below"
"src/prompts/index.ts",14,"// 例如：","// For example:"
"src/prompts/loader.ts",36,"// 转换为大写，作为环境变量的一部分","// Convert to uppercase as part of the environment variable"
"src/prompts/loader.ts",40,"// 检查是否有替换模式的环境变量","// Check if there is a replacement mode environment variable"
"src/prompts/loader.ts",44,"// 使用环境变量完全替换原始 prompt","// Use environment variable to completely replace original prompt"
"src/prompts/loader.ts",49,"// 检查是否有追加模式的环境变量","// Check if there is an append mode environment variable"
"src/prompts/loader.ts",53,"// 将环境变量内容追加到原始 prompt 后","// Append environment variable content to the original prompt"
"src/prompts/loader.ts",58,"// 如果没有自定义，则使用原始 prompt","// If no customization, use the original prompt"
"src/prompts/loader.ts",77,"// 使用简单的模板替换方法，将 {paramName} 替换为对应的参数值","// Use simple template replacement method to replace {paramName} with corresponding parameter values"
"src/prompts/loader.ts",82,"// 如果值为 undefined 或 null，使用空字符串替换","// If value is undefined or null, replace with empty string"
"src/prompts/loader.ts",87,"// 使用正则表达式替换所有匹配的占位符","// Use regular expression to replace all matching placeholders"
"src/prompts/loader.ts",114,"const checkedPaths: string[] = []; // 用于更详细的错误报告","// Used for more detailed error reporting"
"src/prompts/loader.ts",117,"// 1. 检查 DATA_DIR 中的自定义路径","// 1. Check custom paths in DATA_DIR"
"src/prompts/loader.ts",119,"// path.resolve 可以处理 templateSetName 是绝对路径的情况","// path.resolve can handle cases where templateSetName is an absolute path"
"src/prompts/loader.ts",127,"// 2. 如果未找到自定义路径，检查特定的内置模板目录","// 2. If custom path not found, check specific built-in template directory"
"src/prompts/loader.ts",130,"// 假设 templateSetName 对于内置模板是 'en', 'zh' 等","// Assume templateSetName for built-in templates is 'en', 'zh', etc."
"src/prompts/loader.ts",143,"// 3. 如果特定的内置模板也未找到，且不是 'en' (避免重复检查)","// 3. If specific built-in template is also not found and not 'en' (avoid duplicate checking)"
"src/prompts/loader.ts",157,"// 4. 如果所有路径都找不到模板，抛出错误","// 4. If template is not found in all paths, throw error"
"src/prompts/loader.ts",167,"// 5. 读取找到的文档","// 5. Read the found file"
"src/public/script.js",1,"// 全局变量","// Global variables"
"src/public/script.js",7,"let globalAnalysisResult = null; // 添加：保存全局分析结果","// New: Store global analysis result"
"src/public/script.js",10,"let width, height; // << 添加：将宽高定义为全局变量","// << New: Define width and height as global variables"
"src/public/script.js",12,"let isGraphInitialized = false; // << 添加：追踪图表是否已初始化","// << New: Track whether the chart has been initialized"
"src/public/script.js",14,"let zoom; // << 添加：保存缩放行为对象","// << New: Save zoom behavior object"
"src/public/script.js",17,"// 添加：i18n 全局变量","// New: i18n global variables"
"src/public/script.js",19,"let currentLang = ""en""; // 缺省语言","// Default language"
"src/public/script.js",21,"let translations = {}; // 保存加载的翻译","// Store loaded translations"
"src/public/script.js",24,"// DOM元素","// DOM elements"
"src/public/script.js",38,"); // 假设 HTML 中有这个元素","// Assuming this element exists in HTML"
"src/public/script.js",40,"const langSwitcher = document.getElementById(""lang-switcher""); // << 添加：获取切换器元素","// << New: Get switcher element"
"src/public/script.js",42,"const resetViewBtn = document.getElementById(""reset-view-btn""); // << 添加：获取重置按钮元素","// << New: Get reset button element"
"src/public/script.js",45,"// 初始化","// Initialization"
"src/public/script.js",48,"// fetchTasks(); // 将由 initI18n() 触发","// fetchTasks(); // Will be triggered by initI18n()"
"src/public/script.js",50,"initI18n(); // << 添加：初始化 i18n","// << New: Initialize i18n"
"src/public/script.js",54,"updateDimensions(); // << 添加：初始化时更新尺寸","// << New: Update dimensions during initialization"
"src/public/script.js",57,"// 事件监听器","// Event listeners"
"src/public/script.js",59,"// statusFilter.addEventListener(""change"", renderTasks); // 将由 changeLanguage 触发或在 applyTranslations 后触发","// statusFilter.addEventListener(""change"", renderTasks); // Will be triggered by changeLanguage or after applyTranslations"
"src/public/script.js",65,"// 添加：重置视图按钮事件监听","// New: Reset view button event listener"
"src/public/script.js",71,"// 添加：搜索和排序事件监听","// New: Search and sorting event listeners"
"src/public/script.js",90,"// 添加：设置 SSE 连接","// New: Setup SSE connection"
"src/public/script.js",94,"// 添加：语言切换器事件监听","// New: Language switcher event listener"
"src/public/script.js",102,"// 添加：窗口大小改变时更新尺寸","// New: Update dimensions when window size changes"
"src/public/script.js",114,"// 添加：i18n 内核函数","// New: i18n core functions"
"src/public/script.js",116,"// 1. 语言检测 (URL 参数 > navigator.language > 'en')","// 1. Language detection (URL parameters > navigator.language > 'en')"
"src/public/script.js",119,"// 1. 优先从 URL 参数读取","// 1. Read from URL parameters first"
"src/public/script.js",127,"// 2. 检查浏览器语言（移除 localStorage 检查）","// 2. Check browser language (removed localStorage check)"
"src/public/script.js",132,"if (browserLang.toLowerCase().startsWith(""zh"")) return ""zh-CN""; // 简体默认回退到中文","// Simplified Chinese fallback to Simplified Chinese"
"src/public/script.js",137,"// 3. 默认值","// 3. Default value"
"src/public/script.js",142,"// 2. 异步加载翻译文档","// 2. Asynchronously load translation files"
"src/public/script.js",168,"// 3. 翻译函数","// 3. Translation function"
"src/public/script.js",172,"// 简单的占位符替换（例如 {message}）","// Simple placeholder replacement (e.g., {message})"
"src/public/script.js",183,"// 4. 应用翻译到 DOM (处理 textContent, placeholder, title)","// 4. Apply translations to DOM (handle textContent, placeholder, title)"
"src/public/script.js",191,"// 优先处理特定属性","// Handle specific attributes first"
"src/public/script.js",199,"// 如果需要，也可以翻译 value，但通常不需要","// If needed, value can also be translated, but usually not necessary"
"src/public/script.js",202,"// 对于大多数元素，设置 textContent","// For most elements, set textContent"
"src/public/script.js",207,"// 手动更新没有 data-key 的元素（如果有的话）","// Manually update elements without data-key (if any)"
"src/public/script.js",209,"// 例如，如果 footer 时间格式需要本地化，可以在这里处理","// For example, if footer time format needs localization, it can be handled here"
"src/public/script.js",211,"// updateCurrentTime(); // 确保时间格式也可能更新（如果需要）","// updateCurrentTime(); // Ensure time format may also be updated (if needed)"
"src/public/script.js",215,"// 5. 初始化 i18n","// 5. Initialize i18n"
"src/public/script.js",220,"// << 添加：设置切换器的初始值 >>","// << New: Set initial value of the switcher >>"
"src/public/script.js",230,"// 添加：语言切换函数","// New: Language switching function"
"src/public/script.js",273,"// 可以添加用户反馈，例如显示错误消息","// User feedback can be added, such as displaying error messages"
"src/public/script.js",279,"// --- i18n 内核函数结束 ---","// --- i18n core functions end ---"
"src/public/script.js",282,"// 获取任务数据","// Fetch task data"
"src/public/script.js",286,"// 初始加载时显示 loading (现在使用翻译)","// Show loading during initial load (now uses translation)"
"src/public/script.js",303,"// 提取全局分析结果 (找第一个非空的)","// Extract global analysis result (find the first non-empty one)"
"src/public/script.js",309,"break; // 找到一个就够了","// Found one is enough"
"src/public/script.js",313,"// 只有当找到的结果与当前保存的不同时才更新","// Only update when the found result is different from the currently stored one"
"src/public/script.js",317,"renderGlobalAnalysisResult(); // 更新显示","// Update display"
"src/public/script.js",342,"// *** 移除 setTimeout 轮询 ***","// setTimeout(fetchTasks, 30000);"
"src/public/script.js",365,"// 添加：设置 Server-Sent Events 连接","// New: Setup Server-Sent Events connection"
"src/public/script.js",395,"// 添加：比较任务列表是否有变化的辅助函数 (最全面版)","// New: Helper function to compare whether the task list has changed (most comprehensive version)"
"src/public/script.js",516,"// 添加：显示临时错误消息的函数","// New: Function to display temporary error messages"
"src/public/script.js",528,"// 渲染任务列表 - *** 需要进一步优化以实现智能更新 ***","// Render task list - *** Needs further optimization to achieve smart updates ***"
"src/public/script.js",549,"// 保存筛选后的任务 ID 集合，用于图形渲染","// Store the filtered task ID set for graphic rendering"
"src/public/script.js",1227,"// 取消固定位置，让节点可以继续被力导引影响 (如果需要)","// d.fx = null;"
"src/public/script.js",1427,"// 可以选择性地将选中节点带到最前面","// selectedNode.raise();"
"src/public/script.js",1522,"// 函数：激活节点拖拽 (保持不变)","// ... drag ..."
"src/public/style.css",336,"/* 进度指示器样式 */","/* Progress indicator styles */"
"src/public/style.css",368,"background-color: #f1c40f; /* 与status-pending一致 */","/* Consistent with status-pending */"
"src/public/style.css",396,"/* 依赖关系图样式 */","/* Dependency graph styles */"
"src/public/style.css",399,"display: block; /* 避免底部多余空间 */","/* Avoid extra space at the bottom */"
"src/public/style.css",407,"/* 根据类型设置基础颜色 */","/* Set base colors according to type */"
"src/public/style.css",411,"fill: var(--primary-color); /* 当前选中任务 */","/* Currently selected task */"
"src/public/style.css",415,"fill: var(--danger-color); /* 前置依赖任务 */","/* Pre-dependency task */"
"src/public/style.css",419,"fill: var(--secondary-color); /* 后置依赖任务 */","/* Post-dependency task */"
"src/public/style.css",423,"fill: #7f8c8d; /* 未知任务 */","/* Unknown task */"
"src/public/style.css",427,"/* 根据状态调整节点透明度或边框 */","/* Adjust node opacity or border based on status */"
"src/public/style.css",433,"/* 可以添加特殊效果，如描边动画 */","/* Can add special effects, such as stroke animation */"
"src/public/style.css",440,"r: 14; /* 悬停时放大 */","/* Enlarge on hover */"
"src/public/style.css",449,"pointer-events: none; /* 避免文本干扰点击 */","/* Avoid text interfering with clicks */"
"src/public/style.css",453,"/* 添加：高亮节点样式 */","/* New: Highlight node styles */"
"src/public/style.css",456,"stroke: var(--accent-color) !important; /* 使用重要标志确保覆盖 */","/* Use important flag to ensure override */"
"src/public/style.css",482,"/* 过滤器区域样式 */","/* Filter area styles */"
"src/public/style.css",501,"flex-grow: 1; /* 让搜索框占据更多空间 */","/* Let the search box occupy more space */"
"src/public/style.css",506,"/* 添加：缩略图视口指示器样式 */","/* New: Minimap viewport indicator styles */"
"src/tools/index.ts",1,"// 导出所有任务工具","// Export all task tools"
"src/tools/index.ts",5,"// 导出所有项目工具","// Export all project tools"
"src/tools/index.ts",9,"// 导出所有思维链工具","// Export all thought chain tools"
"src/tools/index.ts",13,"// 导出所有研究工具","// Export all research tools"
"src/tools/project/index.ts",1,"// 导出所有项目工具","// Export all project tools"
"src/tools/project/initProjectRules.ts",4,"// 定义schema","// Define schema"
"src/tools/project/initProjectRules.ts",16,"// 从生成器获取提示词","// Get prompt from generator"
"src/tools/project/initProjectRules.ts",20,"// 返回成功响应","// Return success response"
"src/tools/project/initProjectRules.ts",31,"// 错误处理","// Error handling"
"src/tools/research/index.ts",1,"// 导出研究模式工具","// Export research mode tools"
"src/tools/research/researchMode.ts",7,"// 研究模式工具","// Research mode tool"
"src/tools/research/researchMode.ts",46,"// 获取基础目录路径","// Get base directory path"
"src/tools/research/researchMode.ts",53,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get final prompt"
"src/tools/task/analyzeTask.ts",4,"// 分析问题工具","// Task analysis tool"
"src/tools/task/analyzeTask.ts",40,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/clearAllTasks.ts",8,"// 清除所有任务工具","// Clear all tasks tool"
"src/tools/task/clearAllTasks.ts",25,"// 安全检查：如果没有确认，则拒绝操作","// Safety check: refuse operation if not confirmed"
"src/tools/task/clearAllTasks.ts",38,"// 检查是否真的有任务需要清除","// Check if there are actually tasks that need to be cleared"
"src/tools/task/clearAllTasks.ts",52,"// 运行清除操作","// Execute clear operation"
"src/tools/task/deleteTask.ts",10,"// 删除任务工具","// Delete task tool"
"src/tools/task/executeTask.ts",13,"// 运行任务工具","// Execute task tool"
"src/tools/task/executeTask.ts",30,"// 检查任务是否存在","// Check if task exists"
"src/tools/task/executeTask.ts",45,"// 检查任务是否可以运行（依赖任务都已完成）","// Check if task can be executed (all dependency tasks are completed)"
"src/tools/task/executeTask.ts",67,"// 如果任务已经标记为「进行中」，提示用户","// If task is already marked as ""in progress"", prompt user"
"src/tools/task/executeTask.ts",81,"// 如果任务已经标记为「已完成」，提示用户","// If task is already marked as ""completed"", prompt user"
"src/tools/task/executeTask.ts",95,"// 更新任务状态为「进行中」","// Update task status to ""in progress"""
"src/tools/task/executeTask.ts",99,"// 评估任务复杂度","// Assess task complexity"
"src/tools/task/executeTask.ts",103,"// 将复杂度结果转换为适当的格式","// Convert complexity results to appropriate format"
"src/tools/task/executeTask.ts",116,"// 获取依赖任务，用于显示完成摘要","// Get dependency tasks for displaying completion summary"
"src/tools/task/executeTask.ts",128,"// 加载任务相关的文档内容","// Load task-related file content"
"src/tools/task/executeTask.ts",146,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get final prompt"
"src/tools/task/getTaskDetail.ts",5,"// 取得完整任务详情的参数","// Get parameters for full task details"
"src/tools/task/getTaskDetail.ts",18,"// 取得任务完整详情","// Get complete task details"
"src/tools/task/getTaskDetail.ts",24,"// 使用 searchTasksWithCommand 替代 getTaskById，实现记忆区任务搜索","// Use searchTasksWithCommand instead of getTaskById to implement memory area task search"
"src/tools/task/getTaskDetail.ts",26,"// 设置 isId 为 true，表示按 ID 搜索；页码为 1，每页大小为 1","// Set isId to true to indicate search by ID; page number is 1, page size is 1"
"src/tools/task/getTaskDetail.ts",30,"// 检查是否找到任务","// Check if task was found"
"src/tools/task/getTaskDetail.ts",45,"// 获取找到的任务（第一个也是唯一的一个）","// Get the found task (the first and only one)"
"src/tools/task/getTaskDetail.ts",49,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/getTaskDetail.ts",65,"// 使用prompt生成器获取错误消息","// Use prompt generator to get error message"
"src/tools/task/index.ts",1,"// 导出所有任务工具","// Export all task tools"
"src/tools/task/listTasks.ts",13,"// 列出任务工具","// List tasks tool"
"src/tools/task/listTasks.ts",62,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/planTask.ts",9,"// 开始规划工具","// Start planning tool"
"src/tools/task/planTask.ts",38,"// 获取基础目录路径","// Get base directory path"
"src/tools/task/planTask.ts",45,"// 准备所需参数","// Prepare required parameters"
"src/tools/task/planTask.ts",50,"// 当 existingTasksReference 为 true 时，从数据库中加载所有任务作为参考","// When existingTasksReference is true, load all tasks from database as reference"
"src/tools/task/planTask.ts",56,"// 将任务分为已完成和未完成两类","// Divide tasks into completed and incomplete categories"
"src/tools/task/planTask.ts",67,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/queryTask.ts",5,"// 查找任务工具","// Query task tool"
"src/tools/task/queryTask.ts",49,"// 使用系统指令搜索函数","// Use system command search function"
"src/tools/task/queryTask.ts",53,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/reflectTask.ts",4,"// 反思构想工具","// Task reflection tool"
"src/tools/task/reflectTask.ts",31,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/splitTasks.ts",10,"// 拆分任务工具","// Task splitting tool"
"src/tools/task/splitTasks.ts",130,"// 检查 tasks 里面的 name 是否有重复","// Check if there are duplicate names in tasks"
"src/tools/task/splitTasks.ts",148,"// 根据不同的更新模式处理任务","// Handle tasks according to different update modes"
"src/tools/task/splitTasks.ts",156,"// 将任务数据转换为符合batchCreateOrUpdateTasks的格式","// Convert task data to format compatible with batchCreateOrUpdateTasks"
"src/tools/task/splitTasks.ts",174,"// 处理 clearAllTasks 模式","// Handle clearAllTasks mode"
"src/tools/task/splitTasks.ts",184,"// 清空任务后再创建新任务","// Clear tasks and then create new tasks"
"src/tools/task/splitTasks.ts",205,"// 对于其他模式，直接使用 batchCreateOrUpdateTasks","// For other modes, use batchCreateOrUpdateTasks directly"
"src/tools/task/splitTasks.ts",214,"// 根据不同的更新模式生成消息","// Generate messages based on different update modes"
"src/tools/task/splitTasks.ts",239,"// 获取所有任务用于显示依赖关系","// Get all tasks for displaying dependency relationships"
"src/tools/task/splitTasks.ts",244,"allTasks = [...createdTasks]; // 如果获取失败，至少使用刚创建的任务","// If retrieval fails, at least use the newly created tasks"
"src/tools/task/splitTasks.ts",248,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/splitTasksRaw.ts",10,"// 拆分任务工具","// Task splitting tool"
"src/tools/task/splitTasksRaw.ts",153,"// 使用 tasksSchema 验证 tasks","// Use tasksSchema to validate tasks"
"src/tools/task/splitTasksRaw.ts",157,"// 返回错误消息","// Return error message"
"src/tools/task/splitTasksRaw.ts",173,"// 检查 tasks 里面的 name 是否有重复","// Check if there are duplicate names in tasks"
"src/tools/task/splitTasksRaw.ts",191,"// 根据不同的更新模式处理任务","// Handle tasks according to different update modes"
"src/tools/task/splitTasksRaw.ts",199,"// 将任务数据转换为符合batchCreateOrUpdateTasks的格式","// Convert task data to format compatible with batchCreateOrUpdateTasks"
"src/tools/task/splitTasksRaw.ts",217,"// 处理 clearAllTasks 模式","// Handle clearAllTasks mode"
"src/tools/task/splitTasksRaw.ts",227,"// 清空任务后再创建新任务","// Clear tasks and then create new tasks"
"src/tools/task/splitTasksRaw.ts",248,"// 对于其他模式，直接使用 batchCreateOrUpdateTasks","// For other modes, use batchCreateOrUpdateTasks directly"
"src/tools/task/splitTasksRaw.ts",257,"// 根据不同的更新模式生成消息","// Generate messages based on different update modes"
"src/tools/task/splitTasksRaw.ts",282,"// 获取所有任务用于显示依赖关系","// Get all tasks for displaying dependency relationships"
"src/tools/task/splitTasksRaw.ts",287,"allTasks = [...createdTasks]; // 如果获取失败，至少使用刚创建的任务","// If retrieval fails, at least use the newly created tasks"
"src/tools/task/splitTasksRaw.ts",291,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get the final prompt"
"src/tools/task/updateTask.ts",10,"// 更新任务内容工具","// Update task content tool"
"src/tools/task/updateTask.ts",140,"// 获取任务以检查它是否存在","// Get task to check if it exists"
"src/tools/task/updateTask.ts",158,"// 记录要更新的任务和内容","// Record the task and content to be updated"
"src/tools/task/updateTask.ts",179,"// 运行更新操作","// Execute update operation"
"src/tools/task/verifyTask.ts",11,"// 检验任务工具","// Task verification tool"
"src/tools/task/verifyTask.ts",76,"// 更新任务状态为已完成，并添加摘要","// Update task status to completed and add summary"
"src/tools/task/verifyTask.ts",82,"// 使用prompt生成器获取最终prompt","// Use prompt generator to get final prompt"
"src/tools/thought/index.ts",1,"// 导出所有思维链工具","// Export all chain of thought tools"
"src/tools/thought/processThought.ts",71,"// 将参数转换为规范的ThoughtData格式","// Convert parameters to standard ThoughtData format"
"src/tools/thought/processThought.ts",84,"// 确保思维编号不超过总思维数","// Ensure thought number does not exceed total thoughts"
"src/tools/thought/processThought.ts",87,"// 自动调整总思维数量","// Automatically adjust total thoughts count"
"src/tools/thought/processThought.ts",92,"// 格式化思维输出","// Format thought output"
"src/tools/thought/processThought.ts",96,"// 返回成功响应","// Return success response"
"src/tools/thought/processThought.ts",107,"// 捕获并处理所有未预期的错误","// Catch and handle all unexpected errors"
"src/types/index.ts",1,"// 任务状态枚举：定义任务在工作流程中的当前阶段","// Task status enumeration: Defines the current stage of tasks in the workflow"
"src/types/index.ts",4,"PENDING = ""pending"", // 已创建但尚未开始运行的任务","// PENDING = ""pending"", // Created but not yet started tasks"
"src/types/index.ts",6,"IN_PROGRESS = ""in_progress"", // 当前正在运行的任务","// IN_PROGRESS = ""in_progress"", // Currently executing tasks"
"src/types/index.ts",8,"COMPLETED = ""completed"", // 已成功完成并通过验证的任务","// COMPLETED = ""completed"", // Successfully completed and verified tasks"
"src/types/index.ts",10,"BLOCKED = ""blocked"", // 由于依赖关系而暂时无法运行的任务","// BLOCKED = ""blocked"", // Tasks temporarily unable to execute due to dependencies"
"src/types/index.ts",14,"// 任务依赖关系：定义任务之间的前置条件关系","// Task dependency: Defines prerequisite relationships between tasks"
"src/types/index.ts",17,"taskId: string; // 前置任务的唯一标识符，当前任务运行前必须完成此依赖任务","// taskId: string; // Unique identifier of prerequisite task, must be completed before current task execution"
"src/types/index.ts",21,"// 相关文档类型：定义文档与任务的关系类型","// Related file type: Defines the relationship type between files and tasks"
"src/types/index.ts",24,"TO_MODIFY = ""TO_MODIFY"", // 需要在任务中修改的文档","// TO_MODIFY = ""TO_MODIFY"", // Files that need to be modified in the task"
"src/types/index.ts",26,"REFERENCE = ""REFERENCE"", // 任务的参考数据或相关文档","// REFERENCE = ""REFERENCE"", // Reference materials or related documents for the task"
"src/types/index.ts",28,"CREATE = ""CREATE"", // 需要在任务中创建的文档","// CREATE = ""CREATE"", // Files that need to be created in the task"
"src/types/index.ts",30,"DEPENDENCY = ""DEPENDENCY"", // 任务依赖的组件或库文档","// DEPENDENCY = ""DEPENDENCY"", // Components or library files that the task depends on"
"src/types/index.ts",32,"OTHER = ""OTHER"", // 其他类型的相关文档","// OTHER = ""OTHER"", // Other types of related files"
"src/types/index.ts",36,"// 相关文档：定义任务相关的文档信息","// Related file: Defines file information related to tasks"
"src/types/index.ts",39,"path: string; // 文档路径，可以是相对于项目根目录的路径或绝对路径","// path: string; // File path, can be relative to project root or absolute path"
"src/types/index.ts",41,"type: RelatedFileType; // 文档与任务的关系类型","// type: RelatedFileType; // Relationship type between file and task"
"src/types/index.ts",43,"description?: string; // 文档的补充描述，说明其与任务的具体关系或用途","// description?: string; // Supplementary description of the file, explaining its specific relationship or purpose with the task"
"src/types/index.ts",45,"lineStart?: number; // 相关代码区块的起始行（选填）","// lineStart?: number; // Starting line of related code block (optional)"
"src/types/index.ts",47,"lineEnd?: number; // 相关代码区块的结束行（选填）","// lineEnd?: number; // Ending line of related code block (optional)"
"src/types/index.ts",51,"// 任务接口：定义任务的完整数据结构","// Task interface: Defines the complete data structure of tasks"
"src/types/index.ts",54,"id: string; // 任务的唯一标识符","// id: string; // Unique identifier of the task"
"src/types/index.ts",56,"name: string; // 简洁明确的任务名称","// name: string; // Concise and clear task name"
"src/types/index.ts",58,"description: string; // 详细的任务描述，包含实施要点和验收标准","// description: string; // Detailed task description, including implementation points and acceptance criteria"
"src/types/index.ts",60,"notes?: string; // 补充说明、特殊处理要求或实施建议（选填）","// notes?: string; // Supplementary notes, special handling requirements or implementation suggestions (optional)"
"src/types/index.ts",62,"status: TaskStatus; // 任务当前的运行状态","// status: TaskStatus; // Current execution status of the task"
"src/types/index.ts",64,"dependencies: TaskDependency[]; // 任务的前置依赖关系列表","// dependencies: TaskDependency[]; // List of prerequisite dependencies for the task"
"src/types/index.ts",66,"createdAt: Date; // 任务创建的时间戳","// createdAt: Date; // Timestamp when the task was created"
"src/types/index.ts",68,"updatedAt: Date; // 任务最后更新的时间戳","// updatedAt: Date; // Timestamp of last task update"
"src/types/index.ts",70,"completedAt?: Date; // 任务完成的时间戳（仅适用于已完成的任务）","// completedAt?: Date; // Timestamp when task was completed (only for completed tasks)"
"src/types/index.ts",72,"summary?: string; // 任务完成摘要，简洁描述实施结果和重要决策（仅适用于已完成的任务）","// summary?: string; // Task completion summary, briefly describing implementation results and important decisions (only for completed tasks)"
"src/types/index.ts",74,"relatedFiles?: RelatedFile[]; // 与任务相关的文档列表（选填）","// relatedFiles?: RelatedFile[]; // List of files related to the task (optional)"
"src/types/index.ts",77,"// 添加字段：保存完整的技术分析结果","// New field: Save complete technical analysis results"
"src/types/index.ts",79,"analysisResult?: string; // 来自 analyze_task 和 reflect_task 阶段的完整分析结果","// analysisResult?: string; // Complete analysis results from analyze_task and reflect_task stages"
"src/types/index.ts",82,"// 添加字段：保存具体的实现指南","// New field: Save specific implementation guide"
"src/types/index.ts",84,"implementationGuide?: string; // 具体的实现方法、步骤和建议","// implementationGuide?: string; // Specific implementation methods, steps and recommendations"
"src/types/index.ts",87,"// 添加字段：保存验证标准和检验方法","// New field: Save verification standards and inspection methods"
"src/types/index.ts",89,"verificationCriteria?: string; // 明确的验证标准、测试要点和验收条件","// verificationCriteria?: string; // Clear verification standards, test points and acceptance conditions"
"src/types/index.ts",93,"// 任务复杂度级别：定义任务的复杂程度分类","// Task complexity level: Defines task complexity classification"
"src/types/index.ts",96,"LOW = ""低复杂度"", // 简单且直接的任务，通常不需要特殊处理","// LOW = ""Low Complexity"", // Simple and straightforward tasks, usually no special handling required"
"src/types/index.ts",98,"MEDIUM = ""中等复杂度"", // 具有一定复杂性但仍可管理的任务","// MEDIUM = ""Medium Complexity"", // Tasks with some complexity but still manageable"
"src/types/index.ts",100,"HIGH = ""高复杂度"", // 复杂且耗时的任务，需要特别关注","// HIGH = ""High Complexity"", // Complex and time-consuming tasks that require special attention"
"src/types/index.ts",102,"VERY_HIGH = ""极高复杂度"", // 极其复杂的任务，建议拆分处理","// VERY_HIGH = ""Very High Complexity"", // Extremely complex tasks, recommended to be split for processing"
"src/types/index.ts",106,"// 任务复杂度阈值：定义任务复杂度评估的参考标准","// Task complexity thresholds: Defines reference standards for task complexity assessment"
"src/types/index.ts",110,"MEDIUM: 500, // 超过此字数判定为中等复杂度","// MEDIUM: 500, // Above this word count is classified as medium complexity"
"src/types/index.ts",112,"HIGH: 1000, // 超过此字数判定为高复杂度","// HIGH: 1000, // Above this word count is classified as high complexity"
"src/types/index.ts",114,"VERY_HIGH: 2000, // 超过此字数判定为极高复杂度","// VERY_HIGH: 2000, // Above this word count is classified as very high complexity"
"src/types/index.ts",118,"MEDIUM: 2, // 超过此依赖数量判定为中等复杂度","// MEDIUM: 2, // Above this dependency count is classified as medium complexity"
"src/types/index.ts",120,"HIGH: 5, // 超过此依赖数量判定为高复杂度","// HIGH: 5, // Above this dependency count is classified as high complexity"
"src/types/index.ts",122,"VERY_HIGH: 10, // 超过此依赖数量判定为极高复杂度","// VERY_HIGH: 10, // Above this dependency count is classified as very high complexity"
"src/types/index.ts",126,"MEDIUM: 200, // 超过此字数判定为中等复杂度","// MEDIUM: 200, // Above this word count is classified as medium complexity"
"src/types/index.ts",128,"HIGH: 500, // 超过此字数判定为高复杂度","// HIGH: 500, // Above this word count is classified as high complexity"
"src/types/index.ts",130,"VERY_HIGH: 1000, // 超过此字数判定为极高复杂度","// VERY_HIGH: 1000, // Above this word count is classified as very high complexity"
"src/types/index.ts",135,"// 任务复杂度评估结果：记录任务复杂度分析的详细结果","// Task complexity assessment result: Records detailed results of task complexity analysis"
"src/types/index.ts",138,"level: TaskComplexityLevel; // 整体复杂度级别","// level: TaskComplexityLevel; // Overall complexity level"
"src/types/index.ts",141,"// 各项评估指针的详细数据","// Detailed data of various assessment metrics"
"src/types/index.ts",143,"descriptionLength: number; // 描述长度","// descriptionLength: number; // Description length"
"src/types/index.ts",145,"dependenciesCount: number; // 依赖数量","// dependenciesCount: number; // Dependencies count"
"src/types/index.ts",147,"notesLength: number; // 注记长度","// notesLength: number; // Notes length"
"src/types/index.ts",149,"hasNotes: boolean; // 是否有注记","// hasNotes: boolean; // Whether there are notes"
"src/types/index.ts",152,"recommendations: string[]; // 处理建议列表","// recommendations: string[]; // List of processing recommendations"
"src/utils/fileLoader.ts",27,"maxTotalLength: number = 15000 // 控制生成内容的总长度","// Control the total length of generated content"
"src/utils/fileLoader.ts",42,"// 按文档类型优先级排序（首先处理待修改的文档）","// Sort by file type priority (process files to be modified first)"
"src/utils/fileLoader.ts",56,"// 处理每个文档","// Process each file"
"src/utils/fileLoader.ts",65,"// 生成文档基本信息","// Generate basic file information"
"src/utils/fileLoader.ts",69,"// 添加到总内容","// Add to total content"
"src/utils/paths.ts",6,"// 取得项目根目录","// Get project root directory"
"src/utils/paths.ts",12,"// 全局 server 实例","// Global server instance"
"src/utils/paths.ts",35,"* 如果有 server 且支持 listRoots，则使用第一笔 file:// 开头的 root + ""/data""","* If there's a server that supports listRoots, use the first root starting with file:// + ""/data"""
"src/utils/paths.ts",48,"// 找出第一笔 file:// 开头的 root","// Find the first root starting with file://"
"src/utils/paths.ts",55,"// 从 file:// URI 中提取实际路径","// Extract actual path from file:// URI"
"src/utils/paths.ts",65,"// 处理 process.env.DATA_DIR","// Handle process.env.DATA_DIR"
"src/utils/paths.ts",69,"// 如果 DATA_DIR 是绝对路径，返回 ""DATA_DIR/rootPath最后一个文件夹名称""","// If DATA_DIR is an absolute path, return ""DATA_DIR/last folder name of rootPath"""
"src/utils/paths.ts",75,"// 如果没有 rootPath，直接返回 DATA_DIR","// If there's no rootPath, return DATA_DIR directly"
"src/utils/paths.ts",80,"// 如果 DATA_DIR 是相对路径，返回 ""rootPath/DATA_DIR""","// If DATA_DIR is a relative path, return ""rootPath/DATA_DIR"""
"src/utils/paths.ts",85,"// 如果没有 rootPath，使用 PROJECT_ROOT","// If there's no rootPath, use PROJECT_ROOT"
"src/utils/paths.ts",92,"// 如果没有 DATA_DIR，使用缺省逻辑","// If there's no DATA_DIR, use default logic"
"src/utils/paths.ts",98,"// 最后回退到项目根目录","// Finally fall back to project root directory"
"src/web/webServer.ts",14,"// 创建 Express 应用","// Create Express application"
"src/web/webServer.ts",18,"// 保存 SSE 客户端的列表","// Store list of SSE clients"
"src/web/webServer.ts",22,"// 发送 SSE 事件的辅助函数","// Helper function to send SSE events"
"src/web/webServer.ts",26,"// 检查客户端是否仍然连接","// Check if client is still connected"
"src/web/webServer.ts",36,"// 清理已断开的客户端 (可选，但建议)","// Clean up disconnected clients (optional, but recommended)"
"src/web/webServer.ts",41,"// 设置静态文档目录","// Set up static file directory"
"src/web/webServer.ts",46,"const TASKS_FILE_PATH = await getTasksFilePath(); // 使用工具函数取得文件路径","// Use utility function to get file path"
"src/web/webServer.ts",51,"// 设置 API 路由","// Set up API routes"
"src/web/webServer.ts",55,"// 使用 fsPromises 保持异步读取","// Use fsPromises to maintain async reading"
"src/web/webServer.ts",60,"// 确保文件不存在时返回空任务列表","// Ensure empty task list is returned when file doesn't exist"
"src/web/webServer.ts",70,"// 添加：SSE 端点","// Add: SSE endpoint"
"src/web/webServer.ts",77,"// 可选: CORS 头，如果前端和后端不在同一个 origin","// Optional: CORS headers if frontend and backend are not on the same origin"
"src/web/webServer.ts",82,"// 发送一个初始事件或保持连接","// Send an initial event or maintain connection"
"src/web/webServer.ts",86,"// 将客户端添加到列表","// Add client to the list"
"src/web/webServer.ts",90,"// 当客户端断开连接时，将其从列表中移除","// When client disconnects, remove it from the list"
"src/web/webServer.ts",97,"// 定义 writeWebGuiFile 函数","// Define writeWebGuiFile function"
"src/web/webServer.ts",101,"// 读取 TEMPLATES_USE 环境变量并转换为语言代码","// Read TEMPLATES_USE environment variable and convert to language code"
"src/web/webServer.ts",107,"// 自订范本缺省使用英文","// Custom templates default to English"
"src/web/webServer.ts",129,"// 获取可用端口","// Get available port"
"src/web/webServer.ts",133,"// 启动 HTTP 服务器","// Start HTTP server"
"src/web/webServer.ts",136,"// 在服务器启动后开始监听文件变化","// Start monitoring file changes after server starts"
"src/web/webServer.ts",139,"// 检查文件是否存在，如果不存在则不监听 (避免 watch 报错)","// Check if file exists, don't monitor if it doesn't exist (to avoid watch errors)"
"src/web/webServer.ts",147,"// 稍微延迟发送，以防短时间内多次触发 (例如编辑器保存)","// Slightly delay sending to prevent multiple triggers in a short time (e.g., editor saves)"
"src/web/webServer.ts",157,"// 将 URL 写入 WebGUI.md","// Write URL to WebGUI.md"
"src/web/webServer.ts",162,"// 设置进程终止事件处理 (确保移除 watcher)","// Set up process termination event handling (ensure watcher removal)"
"src/web/webServer.ts",165,"// 关闭所有 SSE 连接","// Close all SSE connections"
"src/web/webServer.ts",170,"// 关闭 HTTP 服务器","// Close HTTP server"
"docs/css/styles.css",1,"/* Mook Task Manager MCP 网站样式 */","/* Mook Task Manager MCP Website Styles */"
"docs/css/styles.css",4,"/* 全局变量 */","/* Global Variables */"
"docs/css/styles.css",24,"/* 全局样式 */","/* Global Styles */"
"docs/css/styles.css",28,"overflow-x: hidden; /* 防止水平溢出 */","/* Prevent horizontal overflow */"
"docs/css/styles.css",34,"overflow-x: hidden; /* 防止水平溢出 */","/* Prevent horizontal overflow */"
"docs/css/styles.css",38,"/* 自定义动画 */","/* Custom Animations */"
"docs/css/styles.css",96,"/* 导航栏样式 */","/* Navigation Bar Styles */"
"docs/css/styles.css",139,"/* 英雄区样式 */","/* Hero Section Styles */"
"docs/css/styles.css",192,"/* 痛点与解决方案区样式 */","/* Pain Points & Solutions Section Styles */"
"docs/css/styles.css",260,"/* 按钮样式 */","/* Button Styles */"
"docs/css/styles.css",316,"/* 卡片样式 */","/* Card Styles */"
"docs/css/styles.css",330,"/* 代码区块样式增强 */","/* Enhanced Code Block Styles */"
"docs/css/styles.css",344,"/* 响应式调整 - 手机端 (<768px) */","/* Responsive Adjustments - Mobile (<768px) */"
"docs/css/styles.css",392,"/* 平板端 (768px-1024px) */","/* Tablet (768px-1024px) */"
"docs/css/styles.css",416,"/* 低性能设备动画降级 */","/* Animation Degradation for Low-Performance Devices */"
"docs/css/styles.css",429,"/* 辅助类 */","/* Utility Classes */"
"docs/css/styles.css",462,"/* GitHub图标 */","/* GitHub Icon */"
"docs/css/styles.css",472,"/* 自定义滚动条 */","/* Custom Scrollbar */"
"docs/css/styles.css",491,"/* 功能卡片样式 */","/* Feature Card Styles */"
"docs/css/styles.css",548,"/* 根据颜色设置不同颜色光晕 */","/* Set different color glows based on color */"
"docs/css/styles.css",604,"/* 工作流程区域样式 */","/* Workflow Area Styles */"
"docs/css/styles.css",623,"/* 桌面版时间轴样式 */","/* Desktop Timeline Styles */"
"docs/css/styles.css",657,"/* 移动版时间轴样式 */","/* Mobile Timeline Styles */"
"docs/css/styles.css",682,"/* 步骤详情弹窗样式 */","/* Step Details Modal Styles */"
"docs/css/styles.css",714,"/* 安装与配置区样式 */","/* Installation & Configuration Section Styles */"
"docs/css/styles.css",741,"/* 命令行接口样式 */","/* Command Line Interface Styles */"
"docs/css/styles.css",745,"background-color: #1a202c; /* 深色背景 */","/* Dark background */"
"docs/css/styles.css",747,"color: #e2e8f0; /* 亮色文本 */","/* Light text color */"
"docs/css/styles.css",789,"/* Cursor IDE 配置选项卡 */","/* Cursor IDE Configuration Tabs */"
"docs/css/styles.css",802,"/* 安装卡片样式 */","/* Installation Card Styles */"
"docs/css/styles.css",871,"/* CTA与资源区样式 */","/* CTA & Resources Section Styles */"
"docs/css/styles.css",890,"/* CTA按钮增强 */","/* Enhanced CTA Button */"
"docs/css/styles.css",906,"/* 资源卡片样式 */","/* Resource Card Styles */"
"docs/css/styles.css",952,"/* 使用统计卡片 */","/* Usage Statistics Cards */"
"docs/css/styles.css",985,"/* 页脚样式 */","/* Footer Styles */"
"docs/css/styles.css",1051,"/* 语言切换按钮 */","/* Language Switch Button */"
"docs/css/styles.css",1086,"/* 在移动设备上调整语言切换按钮 */","/* Adjust language switch button on mobile devices */"
"docs/index.html",21,"<!-- AOS.js 滚动动画库 -->","<link href=""https://unpkg.com/aos@2.3.1/dist/aos.css"" rel=""stylesheet"" />"
"docs/js/i18n.js",1,"// i18n.js - 多语系支持功能","// i18n.js - Multi-language support functionality"
"docs/js/i18n.js",3,"// 翻译数据结构","// Translation data structure"
"docs/js/i18n.js",622,"// 翻译应用函数","// Translation application function"
"docs/js/i18n.js",625,"// 确保选择的语言有效","// Ensure the selected language is valid"
"docs/js/i18n.js",633,"// 应用翻译到所有带有 data-i18n 属性的元素","// Apply translations to all elements with data-i18n attribute"
"docs/js/i18n.js",645,"// 处理语言特定的链接","// Handle language-specific links"
"docs/js/i18n.js",727,"// 动态内容翻译和性能优化函数","// =================================================="
"docs/js/i18n.js",845,"// 防御性编程函数，确保翻译系统的健壮性","// =================================================="
"docs/js/main.js",6,"// 页面加载完成后运行","// Execute after page load"
"docs/js/main.js",9,"// 初始化滚动动画","// Initialize scroll animation"
"docs/js/main.js",13,"// 初始化移动端菜单","// Initialize mobile menu"
"docs/js/main.js",17,"// 初始化代码高亮和拷贝功能","// Initialize code highlighting and copy functionality"
"docs/js/main.js",63,"// 只在低性能设备上禁用动画，根据用户偏好设置","// Only disable animations on low-performance devices based on user preferences"
"docs/js/main.js",69,"// 在窗口调整大小时重新初始化AOS以确保正确的触发位置","// Re-initialize AOS when window is resized to ensure correct trigger positions"
